name: Build Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Git
      run: |
        choco install git -y
        
    - name: Update PATH for Git
      run: |
        echo "C:\Program Files\Git\cmd" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
    - name: Build executable
      run: |
        python setup.py build_exe
      
    - name: List build directory contents
      run: |
        if (Test-Path -Path "build") {
          Get-ChildItem -Path build -Recurse
        } else {
          Write-Host "Build directory not found"
        }
      
    - name: Create ZIP archive
      run: |
        $buildFolders = Get-ChildItem -Path build -Directory | Where-Object { $_.Name -like "exe.*" }
        if ($buildFolders) {
          $buildFolder = $buildFolders[0].FullName
          Write-Host "Found build folder: $buildFolder"
          Compress-Archive -Path "$buildFolder\*" -DestinationPath DawGit-windows.zip -Force
        } else {
          Write-Host "No build folder found"
          exit 1
        }
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DawGit-Windows
        path: DawGit-windows.zip
        
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: ./DawGit-windows.zip